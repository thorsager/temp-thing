############################################################
#  	Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.  
# For example java -Dlog4j.configuration=file:myfile
############################################################

############################################################
#  	Global properties
############################################################

log4j.rootLogger=DEBUG, CLIENT_TRACE_LOGGER

log4j.logger.com.avaya=FINE#org.apache.log4j.helpers.UtilLoggingLevel, CLIENT_TRACE_LOGGER
log4j.additivity.com.avaya=false

log4j.appender.CLIENT_TRACE_LOGGER.Threshold=ALL
#log4j.appender.CLIENT_TRACE_LOGGER.Threshold=FINE#org.apache.log4j.helpers.UtilLoggingLevel
log4j.appender.CLIENT_TRACE_LOGGER=org.apache.log4j.RollingFileAppender
log4j.appender.CLIENT_TRACE_LOGGER.File=./bin/client-trace.log
log4j.appender.CLIENT_TRACE_LOGGER.Append=false
log4j.appender.CLIENT_TRACE_LOGGER.layout=org.apache.log4j.PatternLayout
log4j.appender.CLIENT_TRACE_LOGGER.layout.ConversionPattern=%d DmccClient[%X{PID}] :%t: %c:%L %-4p - %m%n

log4j.appender.CLIENT_TRACE_LOGGER.maxFileSize=20MB
log4j.appender.CLIENT_TRACE_LOGGER.maxBackupIndex=50

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# Note: For a given Appender the Threshold should match the class or package log Level you want to trace
# Lets say you want to trace a class or a package and you set the class/package log level to FINEST, you need to make
# sure the corresponding Appender/s Threshold is set to FINEST aswell
# to trace com.avaya.cs.callinfo.CallInfoImplA you woudl do the followind:
# class level:
# log4j.logger.com.avaya.cs.callinfo.CallInfoImplA=FINEST#org.apache.log4j.helpers.UtilLoggingLevel
# package level:
# log4j.logger.com.avaya.cs=FINEST#org.apache.log4j.helpers.UtilLoggingLevel

#log4j.logger.com.avaya.mvcs.proxy.CstaUnmarshallerNode=FINEST#org.apache.log4j.helpers.UtilLoggingLevel
#log4j.logger.com.avaya.mvcs.proxy.CstaMarshallerNode=FINEST#org.apache.log4j.helpers.UtilLoggingLevel

#log4j.logger.com.avaya.mvcs.proxy=FINEST#org.apache.log4j.helpers.UtilLoggingLevel
#log4j.logger.com.avaya.mvcs.proxy.ClientProxy=FINEST#org.apache.log4j.helpers.UtilLoggingLevel

#log4j.logger.com.avaya.common.nio.managed.tlsImpl=FINEST#org.apache.log4j.helpers.UtilLoggingLevel
#log4j.logger.com.avaya.common.nio.managed.tlsImpl.TLSTCPChannel=FINEST#org.apache.log4j.helpers.UtilLoggingLevel
#log4j.logger.com.avaya.common.nio.managed.tlsImpl.TLSPeerValidator=FINEST#org.apache.log4j.helpers.UtilLoggingLevel
#log4j.logger.com.avaya.common.nio.managed.tlsImpl.TLSClientSecurityContext=FINEST#org.apache.log4j.helpers.UtilLoggingLevel

#log4j.logger.com.avaya.common.nio.channels.defaultImpl.SingleThreadedSocketChannelDaemon.level=FINEST#org.apache.log4j.helpers.UtilLoggingLevel
#log4j.logger.com.avaya.common.nio.channels.defaultImpl.DefaultChannelServicer.level=FINEST#org.apache.log4j.helpers.UtilLoggingLevel

#log4j.logger.sun.awt.level=INFO#org.apache.log4j.helpers.UtilLoggingLevel
#log4j.logger.sun.awt.X11.level=INFO#org.apache.log4j.helpers.UtilLoggingLevel
#log4j.logger.javax.swing.level=INFO#org.apache.log4j.helpers.UtilLoggingLevel
#log4j.logger.java.awt.Component.level=INFO#org.apache.log4j.helpers.UtilLoggingLevel
#log4j.logger.sampleapps.softphone.JPhoneFrame.level=INFO#org.apache.log4j.helpers.UtilLoggingLevel